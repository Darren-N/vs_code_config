// Place your key bindings in this file to override the defaults
[
    //Navigation
    {
        "key": "ctrl-h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl-l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl-k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl-j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "ctrl-o",
        "command": "workbench.action.showAllEditors",
        "when": "vim.mode == 'Normal' && 'editorTextFocus'"
    },
    {
        "key": "shift-tab", 
        "command": "workbench.action.focusSideBar",
        "when": "vim.mode == 'Normal' && 'editorTextFocus'"
    },
    {
        "key": "shift-tab", 
        "command": "workbench.action.closeSidebar",
        "when": "sideBarVisible"
    },
    {
        "key": "ctrl-shift-t", 
        "command": "workbench.action.terminal.toggleTerminal",
    },
    {
        "key": "ctrl-tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },

    // Coding
    {
        "key": "shift-j",
        "command": "editor.action.moveLinesDownAction",
        "when": "vim.mode != 'Insert' && editorTextFocus"
    },
    {
        "key": "shift-k",
        "command": "editor.action.moveLinesUpAction",
        "when": "vim.mode != 'Insert' && editorTextFocus"
    },
    {
        "key": "g s",
        "command": "workbench.action.gotoSymbol",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space space",
        "command": "workbench.action.quickOpen",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    // g d: Go to definition. From Vim bindings extension.
    {
        "key": "space d",
        "command": "workbench.action.closeActiveEditor",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },

    // VIM-ish File Explorer
    {
        "key": "r",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "x",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "i",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift-i",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    // R stuff
    {
        "key": "shift-alt-r",
        "command": "shiny.r.runApp",
        "when": "editorLangId == 'r'"
    },
    {
        "key": "ctrl-alt-r",
        "command": "r.runSource",
        "when": "editorLangId == 'r'"
    },
    {
        "key": "alt-f",
        "command": "editor.action.form",
        "when": "editorLangId == 'r'"
    },
    {
    "key": "ctrl+shift+m",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
    "snippet": " %>% "
    }
},
{
    "key": "ctrl+shift+m",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
    "text": " %>% "
    }
}
]